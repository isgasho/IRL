// Demonstrate basic syntax of this language

type @Foo = { i64, [2][4]i64, *@Bar }
type @Bar = { *i64, *@Foo }

@g <- 0: i64;

fn @main() {
%Begin:
    @g <- call i64 @max(1, 2);
    $b <- alloc [4]i64;
    $p <- ptr *i64 $b [@g];
    $v <- ld i64 $p;
    $q <- ptr *i64 $p, 1;
    st i64 $v -> $q;
    ret;
}

fn @max($a: i64, $b: i64) -> i64 {
%Begin:
    $c <- ge i64 $a, $b;
    br $c ? %True : %False;
%True:
    $x.0 <- mov i64 $a;
    jmp %End;
%False:
    $x.1 <- mov i64 $b;
    jmp %End;
%End:
    $x.2 <- phi i64 [%True: $x.0] [%False: $x.1];
    ret $x.2;
}
